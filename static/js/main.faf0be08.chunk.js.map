{"version":3,"sources":["PlayAgainButton.js","helpers/winCombinations.js","Game.js","index.js"],"names":["PlayAgainButton","props","className","onClick","resetGame","WIN_COMBINATIONS","Game","useState","board","Array","fill","currentPlayer","winner","isDraw","gameData","setGameData","handleClick","e","target","dataset","position","newBoard","useEffect","find","combo","every","squareValue","map","idx","rootElement","document","getElementById","ReactDOM","render"],"mappings":"8NAAe,SAASA,EAAgBC,GACtC,OACE,wBAAQC,UAAU,iBAAiBC,QAASF,EAAMG,UAAlD,wBCFG,IAAMC,EAAmB,CAC9B,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,I,MCFM,SAASC,IACtB,MAAgCC,mBAAS,CACvCC,MAAOC,MAAM,GAAGC,KAAK,IACrBC,cAAe,IACfC,QAAQ,EACRC,QAAQ,IAJV,mBAAOC,EAAP,KAAiBC,EAAjB,KA4BA,SAASC,EAAYC,GACnB,GAAkD,KAA9CH,EAASN,MAAMS,EAAEC,OAAOC,QAAQC,YAAqBN,EAASF,OAAQ,CACxE,IAAMS,EAAQ,YAAOP,EAASN,OAC9Ba,EAASJ,EAAEC,OAAOC,QAAQC,UAAYN,EAASH,cAC/CI,EAAY,2BACPD,GADM,IAETN,MAAOa,EACPV,cAA0C,MAA3BG,EAASH,cAAwB,IAAM,QAkB5D,SAASP,IACPW,EAAY,CACVP,MAAOC,MAAM,GAAGC,KAAK,IACrBC,cAAe,IACfC,QAAQ,EACRC,QAAQ,IAIZ,OAvDAS,qBAAU,WACajB,EAAiBkB,MAAK,SAACC,GAC1C,MAC+B,KAA7BV,EAASN,MAAMgB,EAAM,KACrBV,EAASN,MAAMgB,EAAM,MAAQV,EAASN,MAAMgB,EAAM,KAClDV,EAASN,MAAMgB,EAAM,MAAQV,EAASN,MAAMgB,EAAM,OAIpDT,EAAY,2BACPD,GADM,IAETF,OAAmC,MAA3BE,EAASH,cAAwB,IAAM,OAExCG,EAASN,MAAMiB,OAAM,SAACC,GAAD,MAAiC,KAAhBA,MAC/CX,EAAY,2BACPD,GADM,IAETD,QAAQ,OAGX,CAACC,EAASN,QAqCX,sBAAKN,UAAU,MAAf,UACE,kDACCY,EAASF,OACR,qCACE,kDAAqBE,EAASF,OAA9B,OACA,cAACZ,EAAD,CAAiBI,UAAWA,OAE5B,KAEHU,EAASD,OACR,qCACE,sDACA,cAACb,EAAD,CAAiBI,UAAWA,OAE5B,KACJ,qBAAKF,UAAU,kBAAf,SArCKY,EAASN,MAAMmB,KAAI,SAACD,EAAaE,GAAd,OACxB,qBACE,gBAAeA,EACfzB,QAASa,EAETd,UAAU,SAJZ,SAMGwB,GAHIE,WChDb,IAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO,cAAC3B,EAAD,IAAUuB,K","file":"static/js/main.faf0be08.chunk.js","sourcesContent":["export default function PlayAgainButton(props) {\n  return (\n    <button className=\"play-again-btn\" onClick={props.resetGame}>\n      Play Again\n    </button>\n  );\n}\n","export const WIN_COMBINATIONS = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n];\n","import React, { useState, useEffect } from \"react\";\nimport PlayAgainButton from \"./PlayAgainButton\";\nimport { WIN_COMBINATIONS } from \"./helpers/winCombinations\";\nimport \"./styles.css\";\n/* eslint-disable */\n\nexport default function Game() {\n  const [gameData, setGameData] = useState({\n    board: Array(9).fill(\"\"),\n    currentPlayer: \"X\",\n    winner: false,\n    isDraw: false\n  });\n\n  useEffect(() => {\n    const winningCombo = WIN_COMBINATIONS.find((combo) => {\n      return (\n        gameData.board[combo[0]] !== \"\" &&\n        gameData.board[combo[0]] === gameData.board[combo[1]] &&\n        gameData.board[combo[1]] === gameData.board[combo[2]]\n      );\n    });\n    if (winningCombo) {\n      setGameData({\n        ...gameData,\n        winner: gameData.currentPlayer === \"X\" ? \"O\" : \"X\"\n      });\n    } else if (gameData.board.every((squareValue) => squareValue !== \"\")) {\n      setGameData({\n        ...gameData,\n        isDraw: true\n      });\n    }\n  }, [gameData.board]);\n\n  function handleClick(e) {\n    if (gameData.board[e.target.dataset.position] === \"\" && !gameData.winner) {\n      const newBoard = [...gameData.board];\n      newBoard[e.target.dataset.position] = gameData.currentPlayer;\n      setGameData({\n        ...gameData,\n        board: newBoard,\n        currentPlayer: gameData.currentPlayer === \"X\" ? \"O\" : \"X\"\n      });\n    }\n  }\n\n  function renderSquares() {\n    return gameData.board.map((squareValue, idx) => (\n      <div\n        data-position={idx}\n        onClick={handleClick}\n        key={idx}\n        className=\"square\"\n      >\n        {squareValue}\n      </div>\n    ));\n  }\n\n  function resetGame() {\n    setGameData({\n      board: Array(9).fill(\"\"),\n      currentPlayer: \"X\",\n      winner: false,\n      isDraw: false\n    });\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>Play Tic Tac Toe</h1>\n      {gameData.winner ? (\n        <>\n          <h2>Congratulations {gameData.winner}!</h2>\n          <PlayAgainButton resetGame={resetGame} />\n        </>\n      ) : null}\n\n      {gameData.isDraw ? (\n        <>\n          <h2>This Game is a Draw!</h2>\n          <PlayAgainButton resetGame={resetGame} />\n        </>\n      ) : null}\n      <div className=\"board-container\">{renderSquares()}</div>\n    </div>\n  );\n}\n","import ReactDOM from \"react-dom\";\n\nimport Game from \"./Game\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<Game />, rootElement);\n"],"sourceRoot":""}